package com.staff;

import static org.junit.jupiter.api.Assertions.assertEquals;

import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.staff.exception.StaffNotFoundException;
import com.staff.model.Staff;
import com.staff.repository.StaffRepository;
import com.staff.service.StaffServiceImplementation;

@SpringBootTest
class StaffServiceApplicationTests {
	
	@Autowired
	private StaffServiceImplementation service;
	
	@MockBean
	private StaffRepository staffRepository;

	@Test
	public void ShowAllStaffTest() {
		List<Staff>staff = new ArrayList<>();
		Staff s = new Staff();
		
		s.setId(1);
		s.setDepartmentId(122);
		s.setEmployeeName("Sundari");
		s.setPhoneNo("9876656570");
		s.setEmail("krssundari@gmail.com");
		s.setAge(45);
		s.setEmployeeAddress("Urapakkam,Chennai");
		s.setSalary(50000);
		
		staff.add(s);

		when(staffRepository.findAll()).thenReturn(staff);
		assertEquals(1, service.showAllStaffDetails().size());
	}
	
	@Test
	public void ShowStaffById() throws StaffNotFoundException {
		
        Staff s = new Staff();
		
		s.setId(1);
		s.setDepartmentId(122);
		s.setEmployeeName("Sundari");
		s.setPhoneNo("9876656570");
		s.setEmail("krssundari@gmail.com");
		s.setAge(45);
		s.setEmployeeAddress("Urapakkam,Chennai");
		s.setSalary(50000);
		
		Optional<Staff>staff =Optional.of(s);
		when(staffRepository.findById(1)).thenReturn(staff);
		assertEquals(s, service.showStaffById(1));
		
	}
	
	@Test
	public void addStaffTest() throws StaffNotFoundException {
		
        Staff s = new Staff();
        
        s.setId(1);
		s.setDepartmentId(122);
		s.setEmployeeName("Sundari");
		s.setPhoneNo("9876656570");
		s.setEmail("krssundari@gmail.com");
		s.setAge(45);
		s.setEmployeeAddress("Urapakkam,Chennai");
		s.setSalary(50000);

		when(staffRepository.insert(s)).thenReturn(s);
		assertEquals(s, service.addStaff(s));
	}

}
